<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.bge</groupId>
	<artifactId>CCPortal</artifactId>
	<version>0.0.1</version>
	<packaging>war</packaging>
	<name>BGE Portal</name>

	<organization>
		<name>The Bradford Group Ltd</name>
		<url>http://http://www.thebradfordgroup.com/</url>
	</organization>

	<developers>
		<developer>
			<id>snilsen</id>
			<name>Sean Nilsen</name>
		</developer>
	</developers>

	<!-- Maven properties -->

	<properties>

		<!-- General Project Properties -->

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.7</java.version>

		<!-- Tomcat settings -->

		<tomcat.context>/</tomcat.context>
		<tomcat.http.port>8080</tomcat.http.port>
		<tomcat.https.port>8443</tomcat.https.port>
		<tomcat.username>admin</tomcat.username>
		<tomcat.password>admin</tomcat.password>
		<tomcat.url>http://localhost:8080/manager/text</tomcat.url>

		<!-- SSL Certificate to run HTTPS -->

		<shared.ssl.file>${project.build.directory}/shared/ssl.keystore</shared.ssl.file>

		<!-- Plugin and Dependency Versions -->

		<spring.security.version>3.2.5.RELEASE</spring.security.version>
		<spring.version>6.0.0</spring.version>
<!--		<mongodb.version>2.11.2</mongodb.version>
		<morphia.version>1.2.3</morphia.version>-->
                <mysql.version>5.1.30</mysql.version>
		<servlet.version>3.1.0</servlet.version>
		<log4j.version>1.2.17</log4j.version>
		<codec.version>1.7</codec.version>
		<jstl.version>1.2</jstl.version>
		<jsp.version>2.2</jsp.version>

		<plugin.lifecycle.version>1.0.0</plugin.lifecycle.version>
		<plugin.compiler.version>2.3.2</plugin.compiler.version>
		<!--<plugin.keytool.version>1.3</plugin.keytool.version>-->
		<plugin.tomcat7.version>2.1</plugin.tomcat7.version>
		<plugin.clean.version>2.5</plugin.clean.version>
		<plugin.war.version>2.4</plugin.war.version>

	</properties>

	<!-- Maven dependencies -->

	<dependencies>

		<!-- Apache Commons - For SHA1 encryption -->

		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>${codec.version}</version>
		</dependency>

		<!-- Logging -->
		
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>

		<!-- Servlet API -->

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${servlet.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>${jsp.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>${jstl.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.web</groupId>
			<artifactId>jstl-impl</artifactId>
			<version>${jstl.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>servlet-api</artifactId>
					<groupId>javax.servlet</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jsp-api</artifactId>
					<groupId>javax.servlet.jsp</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jstl-api</artifactId>
					<groupId>javax.servlet.jsp.jstl</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- MySQL Libraries -->

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.version}</version>
		</dependency>


                <!--SQL Server Open Source Library-->
                <dependency>
                        <groupId>net.sourceforge.jtds</groupId>
                        <artifactId>jtds</artifactId>
                        <version>1.3.1</version>
                </dependency>


<!--		 MongoDB Libraries 

		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
			<version>${mongodb.version}</version>
		</dependency>

		 Morphia Libraries 

        <dependency>
                <groupId>com.github.jmkgreen.morphia</groupId>
                <artifactId>morphia</artifactId>
                <version>${morphia.version}</version>
        </dependency>-->
                
        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
            <version>2.2.2</version>
        </dependency>
        <dependency>
            <groupId>com.thoughtworks.proxytoys</groupId>
            <artifactId>proxytoys</artifactId>
            <version>1.0</version>
            <type>jar</type>
            <optional>true</optional>
        </dependency>

        <!-- Spring -->

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
        </dependency>


        <!-- Spring Security -->

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <version>${spring.security.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
            <version>${spring.security.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <version>${spring.security.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-taglibs</artifactId>
            <version>${spring.security.version}</version>
        </dependency>

        <!--LDAP-->
                <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.5.6</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-ldap</artifactId>
            <version>4.0.2.RELEASE</version>
        </dependency>
        
    </dependencies>

    <!-- Additional Repositories (Needed for Javax dependencies) -->

    <repositories>
        <!--		<repository>
                <id>maven2-repository.dev.java.net</id>
                <name>Java.net Repository</name>
                <url>http://download.java.net/maven/2/</url>
        </repository>-->
    </repositories>

    <!-- Default build instructions -->

    <build>
        <pluginManagement>
            <plugins>

                <!--lifecycle-mapping configuration is used to store Eclipse m2e settings -->
                <!-- It has no influence on the Maven build itself. -->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>${plugin.lifecycle.version}</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.codehaus.mojo</groupId>
                                        <artifactId>keytool-maven-plugin</artifactId>
                                        <versionRange>[${plugin.keytool.version},)</versionRange>
                                        <goals>
                                            <goal>clean</goal>
                                            <goal>generateKeyPair</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <!-- Standard Maven Plugins -->

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>${plugin.clean.version}</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${plugin.compiler.version}</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${plugin.war.version}</version>
            </plugin>

            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>${plugin.tomcat7.version}</version>
                <configuration>
                    <port>${tomcat.http.port}</port>
                    <httpsPort>${tomcat.https.port}</httpsPort>
                    <keystoreFile>${shared.ssl.file}</keystoreFile>
                    <keystorePass>codehustler</keystorePass>
                    <path>${tomcat.context}</path>
                    <fork>false</fork>
                    <username>${tomcat.username}</username>
                    <password>${tomcat.password}</password>
                    <url>${tomcat.url}</url>
                </configuration>
            </plugin>

            <!-- This plugin generates a Java Keystore for use with SSL -->

<!--            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>keytool-maven-plugin</artifactId>
                <version>${plugin.keytool.version}</version>
                <executions>
                    <execution>
                        <id>clean-ssl-keys</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>generate-ssl-keys</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>generateKeyPair</goal>
                        </goals>
                    </execution>
                </executions>
                <inherited>false</inherited>
                <configuration>
                    <keystore>${shared.ssl.file}</keystore>
                    <dname>cn=localhost</dname>
                    <keypass>bgeltd</keypass>
                    <storepass>bgeltd</storepass>
                    <alias>tomcat</alias>
                    <keyalg>RSA</keyalg>
                </configuration>
            </plugin>-->

        </plugins>
    </build>
</project>